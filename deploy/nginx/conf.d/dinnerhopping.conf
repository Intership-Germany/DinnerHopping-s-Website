server {
    listen 443 ssl;
    server_name dinnerhopping.com;

    ssl_certificate /etc/nginx/certs/dev.crt;
    ssl_certificate_key /etc/nginx/certs/dev.key;

    # Proxy API calls to the backend container and strip the /api prefix
    location /api/ {
        # rewrite so backend sees paths without the /api prefix, e.g. /api/docus -> /docus
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://backend:8000;
        # If backend issues redirects (Location headers) that point to the app root
        # (e.g. https://dinnerhopping.com/docus), rewrite them to include /api so
        # the client stays under /api (e.g. /api/docus).
        proxy_redirect https://$host/ /api/;
        proxy_redirect / /api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        # Increased timeouts for long-running admin operations (e.g. matching)
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_connect_timeout 30s;
    }

    # Serve static frontend directly from mounted volume (frontend/public)
    # This removes the dependency on a host dev server at :3000.
    location / {
        root /usr/share/nginx/html;
        # Try exact file, then directory, then fallback to index.html (SPA-like fallback)
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache";
    }

    # Legacy/dev fallback (disabled). If you want to proxy a dev server instead, uncomment below
    # and comment the static location above.
    # location / {
    #     proxy_pass http://host.docker.internal:3000/; # works on macOS / Windows Docker
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_intercept_errors on;
    #     error_page 502 = @frontend_down;
    # }

    location @frontend_down {
        add_header Content-Type text/html;
        return 200 '<html><body><h1>Frontend not running</h1><p>The frontend dev server is not available.</p></body></html>';
    }
}
