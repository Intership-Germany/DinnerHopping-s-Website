# VirtualHost pour l'API FastAPI (api.example.com)
# Activer modules nécessaires: a2enmod proxy proxy_http proxy_wstunnel headers rewrite ssl

<VirtualHost *:80>
    ServerName api.example.com
    ServerAlias api.dinnerhopping.local

    # Redirection HTTP -> HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]

    # Healthcheck simple (avant redirection si on veut garder en HTTP, mettre en haut)
</VirtualHost>

<VirtualHost *:443>
    ServerName api.example.com
    ServerAlias api.dinnerhopping.local

    # Certificats Let's Encrypt (chemins générés par certbot)
    SSLEngine On
    SSLCertificateFile /etc/letsencrypt/live/api.example.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/api.example.com/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    # Sécurité de base
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-Frame-Options "DENY"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"

    # Proxy vers le container backend (lié sur 127.0.0.1:8000)
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"

    # WebSockets (pour chats si utilisés)
    ProxyPass "/chats/ws"  "ws://127.0.0.1:8000/chats/ws"
    ProxyPassReverse "/chats/ws"  "ws://127.0.0.1:8000/chats/ws"

    # API par défaut
    ProxyPass "/"  "http://127.0.0.1:8000/" retry=0 keepalive=On
    ProxyPassReverse "/"  "http://127.0.0.1:8000/"

    # Limiter taille requêtes (uploads) si nécessaire
    LimitRequestBody 10485760

    ErrorLog  /var/log/apache2/api_error.log
    CustomLog /var/log/apache2/api_access.log combined
</VirtualHost>
