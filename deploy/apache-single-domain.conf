# Un seul domaine (www.example.com) qui sert le frontend et reverse proxy /api vers FastAPI
<VirtualHost *:80>
    ServerName www.example.com
    ServerAlias example.com
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^/(.*)$ https://%{HTTP_HOST}/$1 [R=301,L]
</VirtualHost>

<VirtualHost *:443>
    ServerName www.example.com
    ServerAlias example.com

    DocumentRoot /var/www/dinnerhopping
    SSLEngine On
    SSLCertificateFile /etc/letsencrypt/live/www.example.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/www.example.com/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    # Headers sécurité
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-Frame-Options "DENY"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"

    <Directory /var/www/dinnerhopping>
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
    </Directory>

    # Reverse proxy API sous /api
    ProxyPreserveHost On
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"

    # WebSockets
    ProxyPass "/chats/ws" "ws://127.0.0.1:8000/chats/ws"
    ProxyPassReverse "/chats/ws" "ws://127.0.0.1:8000/chats/ws"

    # Toutes les routes /api -> backend
    ProxyPass "/api/" "http://127.0.0.1:8000/"
    ProxyPassReverse "/api/" "http://127.0.0.1:8000/"

    # Optionnel: rewrite pour enlever /api en amont (ici on le garde pour clarté)

    ErrorLog  /var/log/apache2/site_error.log
    CustomLog /var/log/apache2/site_access.log combined
</VirtualHost>
