# DinnerHopping Backend - Example Environment Variables

# --- Core Application ---
MONGO_USER=dinnerhopping
MONGO_PASSWORD='babyschnaps'
# Include credentials in the URI; authSource=admin is required for root user created by Mongo images
MONGO_URI=mongodb://dinnerhopping:XXXXXXXXXXX@mongo:17027/dinnerhopping?authSource=admin
JWT_SECRET='e6692385e7b720a210cd179341a80343'
# When exposing the backend via nginx-https, prefer the production hostname for local vhost
# Include the /api prefix so absolute URLs generated server-side keep the /api path behind nginx
BACKEND_BASE_URL=https://dinnerhopping.com/api
API_PREFIX='/api'
FRONTEND_BASE_URL=https://dinnerhopping.com
ALLOWED_ORIGINS=*
BACKEND_ROOT_PATH=/api

# --- Stripe (optional) ---
STRIPE_API_KEY='sk_test'
STRIPE_PUBLISHABLE_KEY='pk_test'
STRIPE_WEBHOOK_SECRET='whsec'

# --- SMTP / Email (optional for real email sending) ---
# If SMTP_HOST is unset the backend prints verification & invitation links to logs.
### Local dev: use MailHog for SMTP capture
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_USER=''
SMTP_PASS=''
SMTP_FROM_ADDRESS='dev@example.com'
# MailHog doesn't support TLS; disable STARTTLS for local dev
SMTP_USE_TLS=false
# Timeout (seconds) for SMTP connect/login/send
SMTP_TIMEOUT_SECONDS=10
# Max retry attempts on transient send failures
SMTP_MAX_RETRIES=2

### --- Security Settings ---
# Enforce HTTPS redirect (true/false)
ENFORCE_HTTPS=true
USE_HOST_PREFIX_COOKIES=true
ALLOW_INSECURE_COOKIES=false
CSRF_ENFORCE=true

# --- PayPal ---
# PAYPAL_MODE can be 'sandbox' or 'live'. When unset, sandbox is assumed for testing.
PAYPAL_ENV=sandbox # or 'live'
PAYPAL_CLIENT_ID=
PAYPAL_SECRET=
PAYPAL_MODE=sandbox
PAYPAL_WEBHOOK_ID=

# Legacy Wero manual SEPA flow has been retired; keep variables unset.

### --- User / Auth / Token / Security settings ---
# Token lifetimes and sizes
ACCESS_TOKEN_EXPIRES_MINUTES=120
REFRESH_TOKEN_DAYS=30
ACCESS_TOKEN_BYTES=32
REFRESH_TOKEN_BYTES=32

# Email verification and password reset expiry (hours)
EMAIL_VERIFICATION_EXPIRES_HOURS=48
PASSWORD_RESET_EXPIRES_HOURS=1

# Invite validity (in days)
INVITE_EXPIRES_DAYS=14

# Password policy
PASSWORD_MIN_LENGTH=10
PASSWORD_REQUIRE_NUMERIC=true
PASSWORD_REQUIRE_UPPER=true
PASSWORD_REQUIRE_LOWER=true
PASSWORD_REQUIRE_SPECIAL=false

# Token pepper and address encryption key (base64)
# TOKEN_PEPPER should be a non-secret in examples but set a real secret in production
TOKEN_PEPPER='c29tZXJhbmRvbXBlcHBlcnZhbHVlMTIzNDU2'
# ADDRESS_KEY is a base64-encoded 32-byte key for AES-GCM address encryption (leave empty to disable)
ADDRESS_KEY=

# Misc security tweaks
ENFORCE_HTTPS=false
HSTS_PRELOAD=false

# How many bytes to use when generating short CSRF tokens
CSRF_TOKEN_BYTES=16

# SMTP / email backoff and retry tuning (already present above but kept here for clarity)
SMTP_MAX_RETRIES=2
SMTP_TIMEOUT_SECONDS=10

### --- Logging Configuration ---
# Global log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO
# Output logs in JSON (true/false)
LOG_JSON=false
# Enable file logging (true/false). When true, logs also go to per-topic folders.
LOG_TO_FILES=true
# Base directory for log files (each logger gets its own subdirectory)
LOG_DIR=/var/log/dinnerhopping
# Rotation mode: 'size' (RotatingFileHandler) or 'time' (TimedRotatingFileHandler)
LOG_ROTATE_MODE=size
# Parameter for rotation: if size -> e.g. 10MB / 5MB / 500KB ; if time -> midnight / H / D
LOG_ROTATE_PARAM=10MB
# Number of rotated files to keep
LOG_BACKUP_COUNT=7
# Reduce noisy third-party libraries (applies to uvicorn, httpx, asyncio, passlib)
NOISY_LOG_LEVEL=WARNING

### --- Matching Configuration ---
# Scoring weights for matching algorithm
MATCH_W_DUP=1000          # Penalty for duplicate pairings
MATCH_W_DIST=0.5          # Penalty per second of travel time
MATCH_W_PREF=2            # Bonus for matching course preference
MATCH_W_ALLERGY=2         # Penalty for unhandled allergies
MATCH_W_DESIRED_HOST=10   # Bonus for desired host selection
MATCH_W_TRANS=0           # Penalty for transition between phases
MATCH_W_FINAL_PARTY=0.3   # Penalty for distance from after-party location
MATCH_W_PHASE_ORDER=1     # Penalty for moving away from after-party between phases
MATCH_W_CAPABILITY=5      # Penalty for host capability mismatches

# Matching algorithm limits
MATCH_HOST_CANDIDATES=4   # Max host candidates to evaluate per phase
MATCH_GUEST_CANDIDATES=10 # Max guest candidates to evaluate per host

# Matching features
MATCH_GEOCODE_ON_MISSING=true    # Geocode missing addresses automatically
MATCH_TRAVEL_FAST=false          # Use fast approximation for travel time
MATCH_ALLOW_TEAM_SPLITS=false    # Allow automatic team splitting

# Matching parallelism
MATCH_ROUTING_PARALLELISM=6      # Parallel routing API requests
MATCH_GEOCODE_PARALLELISM=4      # Parallel geocoding API requests

# Matching phases
MATCH_PHASES=appetizer,main,dessert

# Meal time defaults
MATCH_MEAL_TIME_APPETIZER=18:00
MATCH_MEAL_TIME_MAIN=20:00
MATCH_MEAL_TIME_DESSERT=22:00

# Algorithm seeds (for reproducibility)
MATCH_SEED_GREEDY=42
MATCH_SEED_RANDOM=99
MATCH_SEED_LOCAL_SEARCH=7
MATCH_SEED_OPTIMIZER=1000

# Optimization settings
MATCH_ENABLE_OPTIMIZATION=true   # Enable automatic result optimization
MATCH_OPTIMIZATION_MAX_ATTEMPTS=3 # Max optimization attempts (1-10)
MATCH_OPTIMIZATION_PARALLEL=true  # Run attempts in parallel for speed (3x faster)
