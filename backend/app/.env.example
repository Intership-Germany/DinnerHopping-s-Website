# DinnerHopping Backend - Example Environment Variables
# Copy this file to `.env` (DO NOT COMMIT REAL SECRETS) and adjust values.

# --- Core Application ---
MONGO_URI=mongodb://mongo:27017/dinnerhopping
# Optional: instead of a full MONGO_URI you can set credentials and host/port.
# The code will prefer MONGO_URI when set; otherwise it will construct a URI from
# MONGO_USER/MONGO_PASSWORD (or MONGO_INITDB_ROOT_USERNAME/MONGO_INITDB_ROOT_PASSWORD set by Docker).
# Example:
MONGO_USER=myuser
MONGO_PASSWORD='s3cret'
JWT_SECRET=change-me
# For local development: use http://localhost:8000
# For production: use https://your-domain.com (with ENFORCE_HTTPS=true)
BACKEND_BASE_URL=http://localhost:8000
FRONTEND_BASE_URL=http://localhost:3000
ALLOWED_ORIGINS=*

# --- Stripe (optional) ---
STRIPE_API_KEY='sk_test_XXXXXXXXXXXXXXXXXXXXXXXX'
STRIPE_PUBLISHABLE_KEY='pk_test_XXXXXXXXXXXXXXXXXXXXXXXX'
STRIPE_WEBHOOK_SECRET='whsec_example'

# --- SMTP / Email (optional for real email sending) ---
# If SMTP_HOST is unset the backend prints verification & invitation links to logs.
SMTP_HOST='smtp.example.com'
# 587 for STARTTLS, 465 for implicit TLS (SSL)
SMTP_PORT=465
SMTP_USER='noreply@example.com'
SMTP_PASS='change-me'
SMTP_FROM_ADDRESS='noreply@example.com'
# Whether to issue STARTTLS on non-465 ports (true/false)
SMTP_USE_TLS=true
# Timeout (seconds) for SMTP connect/login/send
SMTP_TIMEOUT_SECONDS=10
# Max retry attempts on transient send failures
SMTP_MAX_RETRIES=2

### --- Security Settings ---
# Enforce HTTPS redirect (true/false)
ENFORCE_HTTPS=false
USE_HOST_PREFIX_COOKIES=false
ALLOW_INSECURE_COOKIES=true

# --- PayPal ---
# PAYPAL_MODE can be 'sandbox' or 'live'. When unset, sandbox is assumed for testing.
PAYPAL_ENV=sandbox # or 'live'
PAYPAL_CLIENT_ID=your-paypal-client-id
PAYPAL_SECRET=your-paypal-secret
PAYPAL_MODE=sandbox

### --- User / Auth / Token / Security settings ---
# Token lifetimes and sizes
ACCESS_TOKEN_EXPIRES_MINUTES=60
REFRESH_TOKEN_DAYS=30
ACCESS_TOKEN_BYTES=32
REFRESH_TOKEN_BYTES=32

# Email verification and password reset expiry (hours)
EMAIL_VERIFICATION_EXPIRES_HOURS=48
PASSWORD_RESET_EXPIRES_HOURS=4

# Invite validity (in days)
INVITE_EXPIRES_DAYS=14

# Password policy
PASSWORD_MIN_LENGTH=10
PASSWORD_REQUIRE_NUMERIC=true
PASSWORD_REQUIRE_UPPER=true
PASSWORD_REQUIRE_LOWER=true
PASSWORD_REQUIRE_SPECIAL=true

# CSRF and cookie behaviour
CSRF_ENFORCE=true
USE_HOST_PREFIX_COOKIES=false
ALLOW_INSECURE_COOKIES=true

# Token pepper and address encryption key (base64)
# TOKEN_PEPPER should be a secret in production
TOKEN_PEPPER=change-me-pepper
# ADDRESS_KEY is a base64-encoded 32-byte key for AES-GCM address encryption (leave empty to disable)
ADDRESS_KEY=

# Misc security tweaks
ENFORCE_HTTPS=false
HSTS_PRELOAD=false

# How many bytes to use when generating short CSRF tokens
CSRF_TOKEN_BYTES=16

# SMTP / email backoff and retry tuning
SMTP_MAX_RETRIES=2
SMTP_TIMEOUT_SECONDS=10

### --- Logging Configuration ---
# Global log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO
# Output JSON logs (true/false)
LOG_JSON=false
# Enable file logging (in addition to stdout)
LOG_TO_FILES=true
# Base directory for log files (will create subfolders per topic/logger)
LOG_DIR=/var/log/dinnerhopping
# Rotation mode: 'size' or 'time'
LOG_ROTATE_MODE=size
# If size: e.g. 10MB, 5MB, 500KB; If time: e.g. midnight, H, D
LOG_ROTATE_PARAM=10MB
# Number of rotated backups to keep
LOG_BACKUP_COUNT=7
# Reduce noisy third-party libs (default WARNING)
NOISY_LOG_LEVEL=WARNING

# Notes:
# - File logs are written into per-topic subfolders under LOG_DIR (e.g. $LOG_DIR/payments/2025-09-24.log).
#   Each file is named by date (YYYY-MM-DD.log) to make daily archives easy to inspect.
# - The request middleware adds `request_id` and `client_ip` to log records when available. These fields
#   are included both in key=value stdout logs and in JSON output when LOG_JSON=true.
