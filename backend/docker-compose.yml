services:
  mongo:
    image: mongodb/mongodb-community-server:6.0-ubi8
    restart: unless-stopped
    ports:
      - "27017:27017" 
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dinnerhopping
      - MONGO_INITDB_ROOT_PASSWORD=babyschnaps
    volumes:
      # Persist MongoDB data inside the repo under backend/app/data
      - ../../data/mongo:/data/db
  backend:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - ./app/.env
    environment:
      - LOG_TO_FILES=true
      - LOG_DIR=/var/log/dinnerhopping
      # Ensure backend has Mongo credentials available from docker-compose
      - MONGO_INITDB_ROOT_USERNAME=dinnerhopping
      - MONGO_INITDB_ROOT_PASSWORD=babyschnaps
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
    depends_on:
      - mongo
    volumes:
      # expose logs directory on host for persistence and inspection
      - ./logs:/var/log/dinnerhopping

  mongo-init:
    build: .
    # Use an authenticated URI so the init script can run against an auth-enabled server.
    command: ["/bin/sh", "-c", "python3 scripts/mongo_init.py --mongo-uri=mongodb://dinnerhopping:babyschnaps@mongo:27017/dinnerhopping?authSource=admin"]
    environment:
      - MONGO_URI=mongodb://dinnerhopping:babyschnaps@mongo:27017/dinnerhopping?authSource=admin
      - MONGO_INITDB_ROOT_USERNAME=dinnerhopping
      - MONGO_INITDB_ROOT_PASSWORD=babyschnaps
    depends_on:
      - mongo
    restart: "no"
# Using host bind mounts for persistent data. No named volumes required.